import{d as E,r as i,o as q,w as f,c as g,a as o,b as M,v as S,e as N,n as y,t as h,F as I,f as D,u as P,g as C,h as c,i as T,j as V,k as A}from"./index-infB08VT.js";import{l as Q,Q as R,_ as B}from"./LlmService-Dgr6uOE7.js";const F=`The attached file is an exam paper. Read it carefully and extract the data from it.

All information must be accurately drawn from the document exactly. No guesses, estimates or large assumptions should be made (unless explicitly stated otherwise). Extract text in a format that can be displayed on an HTML page (e.g. include line breaks).`,b={prompt:F},L="exam",K="Exam data extracted from a PDF file",O=!0,U={type:"object",properties:{title:{type:"string",description:'Title of the exam paper. ("No title" if not stated).'},description:{type:"string",description:'Description of the exam paper. ("No description" if not stated).'},maxDuration:{type:"number",description:"Maximum allowed duration of the exam in minutes (0 if not stated)."},maxMarks:{type:"number",description:"Maximum number of marks that can be awarded. (0 if not stated)."},questions:{type:"array",description:"Array of all questions that the exam paper asks.",items:{$ref:"#/definitions/ExamQuestion"}}},additionalProperties:!1,required:["title","description","maxDuration","maxMarks","questions"],definitions:{ExamQuestion:{type:"object",properties:{kind:{type:"string",enum:["text","radio","checkbox"],description:"Best format to present the question on an HTML page."},text:{type:"string",description:"The question being asked."},maxMarks:{type:"number",description:"Maximum number of marks that can be awarded for this question (0 if not stated)."},answerRows:{type:["number","null"],description:"Number of rows for the answer text box (applicable only for text questions)."},options:{type:["array","null"],items:{type:"string"},description:"Array of potential responses (applicable only for radio and checkbox questions)."}},required:["kind","text","maxMarks","answerRows","options"],additionalProperties:!1}}},p={name:L,description:K,strict:O,schema:U};class j{async extractExamQuestions(d){if(!b)return console.error("Prompt for extracting exam data is not available."),null;if(!p||!p)return console.error("Response schema for extracting exam data is not available."),null;const s=await Q.sendUserMessage(b.prompt,p,d);let a;try{a=JSON.parse(s),a.marked=!1;for(const r of a.questions)r.answer=r.kind===R.Checkbox?[]:""}catch(r){return console.error("Error parsing LLM response:",r,s),null}return a}}const J=new j,H={class:"mx-auto p-16 container"},$={class:"gap-4 grid grid-cols-2"},z={class:"flex flex-col gap-4"},G={class:"flex flex-col gap-4"},W={class:"flex flex-col gap-4 col-span-2"},X={class:"flex flex-col gap-4 col-span-2 mt-4"},Y=["disabled"],Z={class:"flex flex-col gap-4 col-span-2 mt-32"},oe=E({__name:"home",setup(v){const d=P(),s=i(""),a=i("gpt-4o"),r=i(null),l=i(!1);q(()=>{localStorage.getItem("llm_api_key")&&(s.value=localStorage.getItem("llm_api_key")),localStorage.getItem("llm_model")?a.value=localStorage.getItem("llm_model"):u()});const k=()=>{localStorage.setItem("llm_api_key",s.value)},u=()=>{localStorage.setItem("llm_model",a.value)},m=()=>{let n;try{n=JSON.parse(localStorage.getItem("exams"))||[]}catch{n=[]}return n},w=async()=>{if(!r.value){console.error("No exam uploaded");return}l.value=!0;const n=m();try{const e=await J.extractExamQuestions(r.value);if(!e)throw new Error("Failed to extract questions from uploaded exam");n.push(e),localStorage.setItem("exams",JSON.stringify(n)),await d.push({name:"questions",params:{title:e.title}});return}catch(e){console.error("Error storing new exam:",e)}finally{l.value=!1}};return f(s,()=>k()),f(a,()=>u()),(n,e)=>{const _=C("router-link");return c(),g("div",H,[o("div",$,[o("div",z,[e[3]||(e[3]=o("p",null,"OpenAI API Key",-1)),M(o("input",{"onUpdate:modelValue":e[0]||(e[0]=t=>s.value=t),type:"password",class:"bg-gray-700 px-3 py-2 border border-orange-500 focus:border-orange-500 rounded focus:outline-none w-full text-light-100 placeholder-orange-500",placeholder:"sk-something"},null,512),[[S,s.value]])]),o("div",G,[e[4]||(e[4]=o("p",null,"Model",-1)),N(B,{modelValue:a.value,"onUpdate:modelValue":e[1]||(e[1]=t=>a.value=t),options:["gpt-4o","gpt-4o-mini","o1"]},null,8,["modelValue"])]),o("div",W,[e[5]||(e[5]=o("p",null,"Exam Paper",-1)),o("input",{type:"file",class:"bg-gray-700 px-3 py-2 border border-red-500 focus:border-red-500 rounded focus:outline-none w-full text-light-100 placeholder-green-500",accept:".pdf",placeholder:"Upload PDF",onChange:e[2]||(e[2]=t=>{var x;return r.value=((x=t.target.files)==null?void 0:x[0])||null})},null,32)]),o("div",X,[o("button",{class:y(["bg-green-500 hover:bg-green-600 px-4 py-2 rounded text-light-100 transition duration-200",l.value?"opacity-50 cursor-not-allowed":""]),disabled:l.value,onClick:w},h(l.value?"Extracting exam questions...":"Extract exam questions"),11,Y)]),o("div",Z,[(c(!0),g(I,null,D(m(),t=>(c(),T(_,{key:t.title,to:{name:t.marked?"marking":"questions",params:{title:t.title}},class:y(["px-4 py-2 rounded text-light-100 transition duration-200",{"bg-red-500 hover:bg-red-600":t.marked,"bg-blue-500 hover:bg-blue-600":!t.marked}])},{default:V(()=>[A(h(t.title),1)]),_:2},1032,["to","class"]))),128))])])])}}});export{oe as default};
